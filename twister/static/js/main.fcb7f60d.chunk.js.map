{"version":3,"sources":["media/BlueFootLeft.png","media/BlueFootRight.png","media/BlueHandLeft.png","media/BlueHandRight.png","media/GreenFootLeft.png","media/GreenFootRight.png","media/GreenHandLeft.png","media/GreenHandRight.png","media/RedFootLeft.png","media/RedFootRight.png","media/RedHandLeft.png","media/RedHandRight.png","media/YellowFootLeft.png","media/YellowFootRight.png","media/YellowHandLeft.png","media/YellowHandRight.png","components/TwisterImg.js","components/Twister.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TwisterImg","props","state","string","img","BlueFootLeft","BlueFootRight","BlueHandLeft","BlueHandRight","GreenFootLeft","GreenFootRight","GreenHandLeft","GreenHandRight","RedFootLeft","RedFootRight","RedHandLeft","RedHandRight","YellowFootLeft","YellowFootRight","YellowHandLeft","YellowHandRight","src","this","current","alt","spinning","React","Component","Twister","getRandomInt","times","maxTimes","spin","bind","max","Math","floor","random","setState","setTimeout","Navbar","bg","expand","Brand","Card","Body","Button","disabled","variant","onClick","startSpin","value","onChange","slideStop","parseInt","target","min","step","App","className","basename","Container","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fcb7f60d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BlueFootLeft.370e17c6.png\";","module.exports = __webpack_public_path__ + \"static/media/BlueFootRight.c4b3d312.png\";","module.exports = __webpack_public_path__ + \"static/media/BlueHandLeft.84637e8d.png\";","module.exports = __webpack_public_path__ + \"static/media/BlueHandRight.697ddf11.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenFootLeft.d08f3fcf.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenFootRight.eac71a0e.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenHandLeft.9e4c7f2f.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenHandRight.8d85ed72.png\";","module.exports = __webpack_public_path__ + \"static/media/RedFootLeft.acca21ef.png\";","module.exports = __webpack_public_path__ + \"static/media/RedFootRight.fe0185cb.png\";","module.exports = __webpack_public_path__ + \"static/media/RedHandLeft.0b8c3b4b.png\";","module.exports = __webpack_public_path__ + \"static/media/RedHandRight.b05f30ae.png\";","module.exports = __webpack_public_path__ + \"static/media/YellowFootLeft.01f8466c.png\";","module.exports = __webpack_public_path__ + \"static/media/YellowFootRight.009e8b37.png\";","module.exports = __webpack_public_path__ + \"static/media/YellowHandLeft.835fbc9d.png\";","module.exports = __webpack_public_path__ + \"static/media/YellowHandRight.a6a5aa30.png\";","import React from 'react';\nimport BlueFootLeft from '../media/BlueFootLeft.png';\nimport BlueFootRight from '../media/BlueFootRight.png';\nimport BlueHandLeft from '../media/BlueHandLeft.png';\nimport BlueHandRight from '../media/BlueHandRight.png';\nimport GreenFootLeft from '../media/GreenFootLeft.png';\nimport GreenFootRight from '../media/GreenFootRight.png';\nimport GreenHandLeft from '../media/GreenHandLeft.png';\nimport GreenHandRight from '../media/GreenHandRight.png';\nimport RedFootLeft from '../media/RedFootLeft.png';\nimport RedFootRight from '../media/RedFootRight.png';\nimport RedHandLeft from '../media/RedHandLeft.png';\nimport RedHandRight from '../media/RedHandRight.png';\nimport YellowFootLeft from '../media/YellowFootLeft.png';\nimport YellowFootRight from '../media/YellowFootRight.png';\nimport YellowHandLeft from '../media/YellowHandLeft.png';\nimport YellowHandRight from '../media/YellowHandRight.png';\n\nclass TwisterImg extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      string:[\"Blue Foot Left\", \"Blue Foot Right\", \"Blue Hand Left\",\"Blue Hand Right\", \"Green Foot Left\", \"Green Foot Right\", \"Green Hand Left\", \"Green Hand Right\", \"Red Foot Left\", \"Red Foot Right\", \"Red Hand Left\", \"Red Hand Right\", \"Yellow Foot Left\", \"Yellow Foot Right\", \"Yellow Hand Left\", \"Yellow Hand Right\"],\n      img:[BlueFootLeft, BlueFootRight, BlueHandLeft, BlueHandRight, GreenFootLeft, GreenFootRight, GreenHandLeft, GreenHandRight, RedFootLeft, RedFootRight, RedHandLeft, RedHandRight, YellowFootLeft, YellowFootRight, YellowHandLeft, YellowHandRight],\n    }  \n  }\n  render() {\n    return (\n      <>\n        <img src={this.state.img[this.props.current]} alt={this.state.string[this.props.current]}/><br />\n        <h2>{!this.props.spinning ? this.state.string[this.props.current] : \"-\"}</h2>\n      </>)\n  }\n}\nexport default TwisterImg;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport TwisterImg from './TwisterImg';\n\nclass Twister extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      current:this.getRandomInt(15),\n      spinning:false,\n      times:0,\n      maxTimes:30\n    }\n    this.spin = this.spin.bind(this);  \n  }\n  \n  getRandomInt(max) {return Math.floor(Math.random() * Math.floor(max));}\n  startSpin(){\n    this.setState({times:0});\n    setTimeout(() => {this.spin()},200);\n  }\n  spin(){\n    if (this.state.times<=this.state.maxTimes){\n      setTimeout(() => {\n        this.setState({current:this.getRandomInt(15), times:this.state.times+1, spinning:true});\n        this.spin();\n      }, this.state.times*10);\n    } else {\n      this.setState({spinning:false});\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand>Twister spinner</Navbar.Brand>\n        </Navbar>\n        <Card>\n          <Card.Body>\n            <TwisterImg current={this.state.current} spinning={this.state.spinning} /><br />\n            <Button disabled={this.state.spinning} variant=\"primary\" onClick={() => this.startSpin()}>Spin</Button><br /><br />\n            <RangeSlider\n              disabled={this.state.spinning}\n              value={this.state.maxTimes}\n              onChange={slideStop => this.setState({maxTimes:parseInt(slideStop.target.value)})}\n              min={0}\n              max={40}\n              step={10}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    )\n  }\n}\nexport default Twister;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Twister from './components/Twister';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport './App.css';\n\n/**\n * \n * ==== Rebuilding this app from scratch ====\n * npm install react-bootstrap bootstrap\n * npm install react-bootstrap-range-slider\n\n */\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={'/twister'}>\n        <Container>\n          <Switch>                                          \n            <Route path=\"/\">\n              <Twister />\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}