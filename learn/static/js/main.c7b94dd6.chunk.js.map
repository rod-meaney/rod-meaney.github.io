{"version":3,"sources":["components/FetchingHack.js","App.js","serviceWorker.js","index.js"],"names":["User","props","state","title","email","firstname","lastname","id","ListGroup","Item","this","className","Button","color","size","onClick","delete","React","Component","FetchingHack","users","fetch","then","results","json","data","fetched_users","map","user","index","key","name","first","last","deleteItem","bind","setState","filter","item","Card","Body","TempPlay","Accelerometer","handleResize","event","windowWith","window","innerWidth","handleOrientation","ori_x","approx","alpha","ori_y","beta","ori_z","gamma","handleMotion","gyr_z","gyr_x","gyr_y","acc_x","acceleration","x","acc_y","y","acc_z","z","addEventListener","removeEventListener","val","toFixed","Home","Title","Img","variant","src","style","width","process","to","App","basename","Container","Navbar","bg","expand","Brand","as","Link","NavDropdown","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7b94dd6.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass User extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      title:props.title,\n      email:props.email,\n      firstname:props.firstname,\n      lastname:props.lastname,\n      id:props.id\n    }  \n  }\n  render() {\n    return(\n    <ListGroup.Item>{this.state.title} {this.state.firstname} {this.state.lastname}\n    <span className=\"float-right\">\n      <Button color=\"red\" size={30} onClick={() => this.props.delete(this.state.id)}>del</Button>\n    </span>\n    </ListGroup.Item>\n    );\n  }\n}\n\nclass FetchingHack extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users:[]\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://api.randomuser.me/?results=20')\n    .then(results => {return results.json()})\n    .then(data => {\n      let fetched_users = data.results.map((user,index) => {\n        return(\n          <User \n            key={index}  \n            title={user.name.title} \n            email={user.email} \n            firstname={user.name.first} \n            lastname={user.name.last} \n            id={`${index}`}\n            delete={this.deleteItem.bind(this)}\n            />\n        )\n      });\n      this.setState({users:fetched_users});\n    });\n  }\n\n  deleteItem(id) {\n    this.setState({users:this.state.users.filter(item => item.props.id !== id)});\n  };\n\n  render() {\n    return (\n      <Card>\n        <Card.Body>\n          <ListGroup>\n            {this.state.users.map((item) => item)}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default FetchingHack;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport FetchingHack from './components/FetchingHack';\nimport './App.css';\n\n\n/**\n * \n * ==== Rebuilding this app from scratch ====\n * npx create-react-app <app-name>\n * npm install react-bootstrap bootstrap\n * npm install react-bootstrap-icons --save\n * npm install react-router-dom\n * \n */\n\nclass TempPlay extends React.Component {\n\n  render() {\n    return (\n      <Card>\n        <Card.Body>\n        \n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass Accelerometer extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ori_x:0,\n      ori_y:0,\n      ori_z:0,\n      acc_x:0,\n      acc_y:0,\n      acc_z:0,\n      gyr_x:0,\n      gyr_y:0,\n      gyr_z:0,            \n      windowWith: window.innerWidth\n    }\n  }\n  componentDidMount(){\n    window.addEventListener(\"devicemotion\", this.handleMotion);\n    window.addEventListener(\"deviceorientation\", this.handleOrientation);\n    window.addEventListener('resize', this.handleResize)\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"devicemotion\", this.handleMotion);\n    window.removeEventListener('deviceorientation', this.handleOrientation);\n    window.removeEventListener('resize', this.handleResize)\n  }\n  handleResize = (event) => {\n    this.setState({ windowWith: window.innerWidth });\n  }\n  \n  approx(val) {\n    return val.toFixed(2);\n  }\n\n  handleOrientation = (event) => {\n    this.setState({\n      ori_x:this.approx(event.alpha),\n      ori_y:this.approx(event.beta),\n      ori_z:this.approx(event.gamma)\n    })\n  } \n  \n  handleMotion = (event) => {\n    this.setState({\n      gyr_z:this.approx(event.alpha),\n      gyr_x:this.approx(event.beta),\n      gyr_y:this.approx(event.gamma),\n      acc_x:this.approx(event.acceleration.x),\n      acc_y:this.approx(event.acceleration.y),\n      acc_z:this.approx(event.acceleration.z)\n    })\n  } \n\n  render() {\n    return (\n      <Card>\n        <Card.Body>\n          <ListGroup>\n              <ListGroup.Item>Window width<span className=\"float-right\">{this.state.windowWith}</span></ListGroup.Item>\n              <ListGroup.Item>Orientation X<span className=\"float-right\">{this.state.ori_x}</span></ListGroup.Item>\n              <ListGroup.Item>Orientation Y<span className=\"float-right\">{this.state.ori_y}</span></ListGroup.Item>\n              <ListGroup.Item>Orientation Z<span className=\"float-right\">{this.state.ori_z}</span></ListGroup.Item>\n              <ListGroup.Item>Gyro X<span className=\"float-right\">{this.state.gyr_x}</span></ListGroup.Item>\n              <ListGroup.Item>Gyro Y<span className=\"float-right\">{this.state.gyr_y}</span></ListGroup.Item>\n              <ListGroup.Item>Gyro Z<span className=\"float-right\">{this.state.gyr_z}</span></ListGroup.Item>\n              <ListGroup.Item>Acceleration X<span className=\"float-right\">{this.state.acc_x}</span></ListGroup.Item>\n              <ListGroup.Item>Acceleration Y<span className=\"float-right\">{this.state.acc_y}</span></ListGroup.Item>\n              <ListGroup.Item>Acceleration Z<span className=\"float-right\">{this.state.acc_z}</span></ListGroup.Item>\n            </ListGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>Basic Home Page</Card.Title>\n          <Card.Img variant=\"top\" src='https://i.pinimg.com/236x/5c/2b/d9/5c2bd965c4d91122de012e636496e60c--swimming-photography-summer-photography.jpg' style={{ width: '15rem' }} />\n          <p>\n            <br />\n            Just some fun for training\n            <br />\n            Environment is: <b>{process.env.REACT_APP_ENVIRONEMNT_NAME}</b>\n          </p>\n          <Link to={`/temp-play`}><Button variant=\"primary\">Play time</Button></Link>\n          {\" \"}\n          <Link to={`/fetching`}><Button variant=\"primary\">Fetching stuff</Button></Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass App extends React.Component{\n  render() {\n    return (\n      <Router basename={'/learn'}>\n        <Container>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand as={Link} to=\"/\">Learning!</Navbar.Brand>\n            <NavDropdown title=\"Options\" id=\"basic-nav-dropdown\" className=\"nav-item dropdown ml-auto\">\n              <NavDropdown.Item as={Link} to={`/`}>Home</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to={`/temp-play`}>Play time</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to={`/fetching`}>Fetching</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to={`/accelerometer`}>Accelerometer</NavDropdown.Item>\n            </NavDropdown>\n          </Navbar>\n          {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path={`/fetching`}>\n              <FetchingHack />\n            </Route>\n            <Route path={`/temp-play`}>\n              <TempPlay />\n            </Route>\n            <Route path={`/accelerometer`}>\n              <Accelerometer />\n            </Route>            \n            <Route path={`/`}>\n              <Home />\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}